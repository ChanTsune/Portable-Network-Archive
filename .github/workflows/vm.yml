name: VM Tests
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

permissions:
  contents: read

env:
  RUST_BACKTRACE: 1

jobs:
  solaris-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on Solaris
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in Solaris
        id: test
        uses: vmactions/solaris-vm@58cbd70c6e051860f9b8f65908cc582938fbbdba # v1.1.5
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install bash libtool gnu-m4 tree wget gcc autoconf //solaris/text/gawk pkg://solaris/text/gnu-diffutils pkg://solaris/text/gnu-grep pkg://solaris/text/gnu-sed cmake
            source <(curl -s https://raw.githubusercontent.com/psumbera/solaris-rust/refs/heads/main/sh.rust-web-install)
            mv /root/.rust_solaris/rustc-*/ /root/.rust_solaris/rustc/
          run: |
            set -e
            export LC_ALL=C LANG=C
            export PATH=/root/.rust_solaris/rustc/bin:$PATH
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack@0.6.33 --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  NetBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on NetBSD
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in NetBSD
        id: test
        uses: vmactions/NetBSD-vm@7aea50f9eb16df034be5d71eb81fea9804505c28 # v1.2.0
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -v curl cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            export PATH=$PATH:/usr/sbin
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  FreeBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on FreeBSD
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in FreeBSD
        id: test
        uses: vmactions/freebsd-vm@487ce35b96fae3e60d45b521735f5aa436ecfade # v1.2.4
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install -y curl cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm,acl

  OpenBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on OpenBSD
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in OpenBSD
        id: test
        uses: vmactions/OpenBSD-vm@bed57f753a75c9c49ab5c1880d274861b2103dd4 # v1.2.1
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -I -v gmake gettext-tools gtar libtool m4 cmake
            /usr/sbin/pkg_add -I -v rust
          run: |
            set -e
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  DragonflyBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on DragonflyBSD
    steps:
      - uses: actions/checkout@v4
      - name: Test in DragonflyBSD
        id: test
        uses: vmactions/dragonflybsd-vm@v1.1.1
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install -y curl cmake libnghttp2
            pkg install -y rust
          run: |
            set -e
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  OmniOS-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on OmniOS
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in OmniOS
        id: test
        uses: vmactions/omnios-vm@c31844c7abe722cd7c97df82cab1f1fab1e5339f # v1.1.1
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install curl pkg:/developer/gcc13 cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm,zlib-ng
