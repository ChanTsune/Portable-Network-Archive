name: VM Tests
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

env:
  RUST_BACKTRACE: 1

jobs:
  solaris-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on Solaris
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Test in Solaris
        id: test
        uses: vmactions/solaris-vm@170f1f96f376cf7467cc41627e0c7590932fccaa # v1.1.4
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install bash libtool gnu-m4 tree wget gcc autoconf //solaris/text/gawk pkg://solaris/text/gnu-diffutils pkg://solaris/text/gnu-grep pkg://solaris/text/gnu-sed cmake
            source <(curl -s https://raw.githubusercontent.com/psumbera/solaris-rust/refs/heads/main/sh.rust-web-install)
            mv /root/.rust_solaris/rustc-*/ /root/.rust_solaris/rustc/
          run: |
            set -e
            export LC_ALL=C LANG=C
            export PATH=/root/.rust_solaris/rustc/bin:$PATH
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack@0.6.33 --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  NetBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on NetBSD
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Test in NetBSD
        id: test
        uses: vmactions/NetBSD-vm@46a58bbf03682b4cb24142b97fa315ae52bed573 # v1.1.8
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -v autoconf gmake gettext-tools gtar-base libtool-base m4 po4a curl cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            export PATH=$PATH:/usr/sbin
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  FreeBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on FreeBSD
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Test in FreeBSD
        id: test
        uses: vmactions/freebsd-vm@c3ae29a132c8ef1924775414107a97cac042aad5 # v1.2.0
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install -y curl cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm,acl

  OpenBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on OpenBSD
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Test in OpenBSD
        id: test
        uses: vmactions/OpenBSD-vm@0d65352eee1508bab7cb12d130536d3a556be487 # v1.1.8
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -I -v gmake gettext-tools gtar libtool m4 cmake
            /usr/sbin/pkg_add -I -v rust
          run: |
            set -e
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

#  DragonflyBSD-test:
#    runs-on: ubuntu-latest
#    timeout-minutes: 100
#    name: Test on DragonflyBSD
#    steps:
#      - uses: actions/checkout@v4
#      - name: Test in DragonflyBSD
#        id: test
#        uses: vmactions/dragonflybsd-vm@v1.0.9
#        with:
#          envs: "RUST_BACKTRACE"
#          copyback: false
#          usesh: true
#          prepare: |
#            pkg install -y curl cmake libnghttp2
#            pkg install -y rust
#          run: |
#            set -e
#            export LC_ALL=C LANG=C
#            uname -a
#            chown -R $(whoami):$(id -gn) ./
#            chmod -R a+rw ./
#            cargo install -f cargo-hack --locked
#            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  OmniOS-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on OmniOS
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Test in OmniOS
        id: test
        uses: vmactions/omnios-vm@8eba2a9217262f275d4566751a92d6ef2f433d00 # v1.1.0
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install curl pkg:/developer/gcc13 cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm,zlib-ng
