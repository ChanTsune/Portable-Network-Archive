name: VM Tests
on:
  pull_request:
jobs:
  solaris-test:
    runs-on: ubuntu-latest
    name: Test on Solaris
    steps:
      - uses: actions/checkout@v4
      - name: Test in Solaris
        id: test
        uses: vmactions/solaris-vm@v1.0.9
        with:
          usesh: true
          prepare: |
            pkg install bash libtool automake gnu-m4 tree wget gcc autoconf //solaris/text/gawk pkg://solaris/text/gnu-diffutils pkg://solaris/text/gnu-grep pkg://solaris/text/gnu-sed
            pkg install pkg:/developer/rust/cargo
          run: |
            set -e
            export LC_ALL=C LANG=C
            uname -a
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  NetBSD-test:
    runs-on: ubuntu-latest
    name: Test on NetBSD
    steps:
      - uses: actions/checkout@v4.1.6
      - name: Test in NetBSD
        id: test
        uses: vmactions/NetBSD-vm@v1.1.3
        with:
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -v autoconf automake gmake gettext-tools gtar-base libtool-base m4 po4a curl
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  OpenBSD-test:
    runs-on: ubuntu-latest
    name: Test on OpenBSD
    steps:
      - uses: actions/checkout@v4.1.6
      - name: Test in OpenBSD
        id: test
        uses: vmactions/OpenBSD-vm@v1.1.2
        with:
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -I -v autoconf-2.71 automake-1.16.5 gmake gettext-tools gtar libtool m4
            /usr/sbin/pkg_add -v rust
          run: |
            set -e
            export LC_ALL=C LANG=C
            uname -a
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  OmniOS-test:
    runs-on: ubuntu-latest
    name: Test on OmniOS
    steps:
      - uses: actions/checkout@v4
      - name: Test in OmniOS
        id: test
        uses: vmactions/omnios-vm@v1.0.8
        with:
          usesh: true
          prepare: |
            pkg install curl pkg:/developer/gcc13
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm
