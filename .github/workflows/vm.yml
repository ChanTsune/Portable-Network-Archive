name: VM Tests
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

env:
  RUST_BACKTRACE: 1

jobs:
  solaris-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on Solaris
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in Solaris
        id: test
        uses: vmactions/solaris-vm@58cbd70c6e051860f9b8f65908cc582938fbbdba # v1.1.5
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install bash libtool gnu-m4 tree wget gcc autoconf //solaris/text/gawk pkg://solaris/text/gnu-diffutils pkg://solaris/text/gnu-grep pkg://solaris/text/gnu-sed cmake
            source <(curl -s https://raw.githubusercontent.com/psumbera/solaris-rust/refs/heads/main/sh.rust-web-install)
            mv /root/.rust_solaris/rustc-*/ /root/.rust_solaris/rustc/
          run: |
            set -e
            export LC_ALL=C LANG=C
            export PATH=/root/.rust_solaris/rustc/bin:$PATH
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack@0.6.33 --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  NetBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on NetBSD
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in NetBSD
        id: test
        uses: vmactions/NetBSD-vm@d0228be27fbaba19418cc1b332609a895cf16561 # v1.1.9
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -v curl cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            export PATH=$PATH:/usr/sbin
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  FreeBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on FreeBSD
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in FreeBSD
        id: test
        uses: vmactions/freebsd-vm@05856381fab64eeee9b038a0818f6cec649ca17a # v1.2.3
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install -y curl cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm,acl

  OpenBSD-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on OpenBSD
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in OpenBSD
        id: test
        uses: vmactions/OpenBSD-vm@1e7cc4fa7727646d3cf5921289b1f5c9d1a88f3c # v1.2.0
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            /usr/sbin/pkg_add -I -v gmake gettext-tools gtar libtool m4 cmake
            /usr/sbin/pkg_add -I -v rust
          run: |
            set -e
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm

#  DragonflyBSD-test:
#    runs-on: ubuntu-latest
#    timeout-minutes: 100
#    name: Test on DragonflyBSD
#    steps:
#      - uses: actions/checkout@v4
#      - name: Test in DragonflyBSD
#        id: test
#        uses: vmactions/dragonflybsd-vm@v1.0.9
#        with:
#          envs: "RUST_BACKTRACE"
#          copyback: false
#          usesh: true
#          prepare: |
#            pkg install -y curl cmake libnghttp2
#            pkg install -y rust
#          run: |
#            set -e
#            export LC_ALL=C LANG=C
#            uname -a
#            chown -R $(whoami):$(id -gn) ./
#            chmod -R a+rw ./
#            cargo install -f cargo-hack --locked
#            cargo hack test --locked --release --feature-powerset --exclude-features wasm

  OmniOS-test:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    name: Test on OmniOS
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Test in OmniOS
        id: test
        uses: vmactions/omnios-vm@c31844c7abe722cd7c97df82cab1f1fab1e5339f # v1.1.1
        with:
          envs: "RUST_BACKTRACE"
          copyback: false
          usesh: true
          prepare: |
            pkg install curl pkg:/developer/gcc13 cmake
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          run: |
            set -e
            . "$HOME/.cargo/env"
            export LC_ALL=C LANG=C
            uname -a
            chown -R $(whoami):$(id -gn) ./
            chmod -R a+rw ./
            cargo install -f cargo-hack --locked
            cargo hack test --locked --release --feature-powerset --exclude-features wasm,zlib-ng
