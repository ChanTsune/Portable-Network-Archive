name: test
on:
  pull_request:
  push:
jobs:
  tier1:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
          - freebsd-latest # self-hosted
        rust:
          - stable
          - beta
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - name: git autocrlf false
        if: startsWith(matrix.os, 'windows')
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y libacl1-dev
      - uses: actions/checkout@v4
      - id: install_rust
        uses: ./.github/actions/setup-rust
        with:
          channel: ${{ matrix.rust }}
      - name: Install cargo-hack from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-hack
          cache-key: ${{ matrix.os }}
      - name: Restore rust build cache
        id: restore-rust-build-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            target/*
            !target/tmp
          key: "${{ matrix.os }}-${{ steps.install_rust.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}"
          restore-keys: "${{ matrix.os }}-${{ steps.install_rust.outputs.version }}"
      - name: run test
        run: |
          cargo hack test --locked --release --feature-powerset --exclude-features wasm
        env:
          RUST_BACKTRACE: 1
      - name: Save rust build cache
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        uses: actions/cache/save@v4
        with:
          path: |
            target/*
            !target/tmp
          key: "${{ steps.restore-rust-build-cache.outputs.cache-primary-key }}"

  tier3:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
        target:
          - x86_64-unknown-redox
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - id: install_rust
        uses: ./.github/actions/setup-rust
        with:
          channel: ${{ matrix.rust }}
          target: ${{ matrix.target }}
      - name: run test
        run: |
          cargo check --locked --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1
